{
    "version": "GradeLikeAHuman 2025.1.beta",
    "rubricgeneration": [
        {
            "Dataset": "CricketAnalytics",
            "prompt": "As a Java programming instructor, create a detailed grading rubric for a Cricket Analytics application assignment.\n\nContext:\n- Question Details: {question}\n- Base Code Structure: {codebase}\n- Supporting Files: Assume the file is present with the student it is an excel file.\n- Initial Rubric Framework: {init_rubric}\n- Maximum Points: {full_points}\n- Sample Graded Work: {sample_studata}\n\nAnalysis Steps:\n1. Method Implementation Review:\n   - Evaluate method signatures and return types\n   - Check exception handling requirements\n   - Assess file I/O operations\n   - Verify OOP principles application\n\n2. Functionality Assessment:\n   - Data structure usage\n   - Algorithm implementation\n   - Code efficiency\n   - Error handling\n\n3. For each required method, specify:\n   - Expected inputs and outputs\n   - Critical implementation points\n   - Common errors to check\n   - Partial credit scenarios\n\nOutput Format:\n{\n    'method_criteria': [\n        {\n            'method_name': [method name],\n            'total_points': [points],\n            'implementation_steps': [\n                {\n                    'step': [description],\n                    'points': [allocated points],\n                    'requirements': [specific requirements],\n                    'common_errors': [typical mistakes],\n                    'partial_credit': [conditions]\n                }\n            ],\n            'example_implementation': [code example]\n        }\n    ]\n}"
        }
    ],
    "rubricbasedevaluation": [
        {
            "promptNumber": "CricketAnalytics",
            "prompt": "Evaluate this Java submission for the Cricket Analytics application:\n\nContext:\n- Question: {question}\n- Required Implementation: {codebase}\n- Final Rubric: {final_rubric}\n- Total Points: {full_points}\n- Student Code: {submission}\n\nEvaluation Process:\n1. For each method use the rubrick to evaluate the code\n\n2. Code Quality Assessment:\n   - Variable naming and conventions\n   - Method organization\n   - Error handling implementation\n   - Code comments and documentation\n\n3. OOP Principles:\n   - Class structure usage\n   - Inheritance implementation\n   - Interface compliance\n   - Encapsulation practices\n\nOutput Format:\n{\n    'method_scores': {\n        'method_name': {\n            'points_earned': [score],\n            'breakdown': [point allocation details],\n            'feedback': [specific feedback],\n            'code_issues': [identified problems],\n            'suggestions': [improvement recommendations]\n        }\n    },\n    'overall_assessment': {\n        'total_score': [final score],\n        'major_strengths': [key positive points],\n        'areas_for_improvement': [improvement areas],\n        'general_feedback': [overall comments]\n    }\n}"
        }
    ],
    "re-evaluation": [
        {
            "promptNumber": "CricketAnalytics",
            "prompt": "Re-evaluate your assessment of the Cricket Analytics implementation:\n\nPrevious Evaluation: [Previous_evaluation]\n\nRe-evaluation Process:\n1. Method Implementation Review:\n   - Compare implementation against rubric requirements\n   - Verify point allocation consistency\n   - Check for overlooked functionality\n   - Assess error handling completeness\n\n2. Scoring Consistency Check:\n   - Compare with similar submissions\n   - Verify partial credit allocation\n   - Review edge case handling\n   - Validate feedback accuracy\n\n3. Code Quality Re-assessment:\n   - Review OOP principles application\n   - Verify exception handling completeness\n   - Check file operations implementation\n   - Assess code organization\n\nOutput Format:\n{\n    'evaluation_comparison': {\n        'original_scores': [previous scores],\n        'revised_scores': [new scores],\n        'changes': {\n            'method': [affected method],\n            'original_points': [old points],\n            'revised_points': [new points],\n            'justification': [reason for change]\n        }\n    },\n    'final_assessment': {\n        'confirmed_score': [final score],\n        'adjustment_rationale': [explanation],\n        'updated_feedback': [revised feedback]\n    }\n}"
        }
    ]
}